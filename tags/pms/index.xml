<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Pms on Caleb Cushing&#39;s blog</title>
    <link>http://blog.xenoterracide.com/tags/pms/index.xml</link>
    <description>Recent content in Pms on Caleb Cushing&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <atom:link href="http://blog.xenoterracide.com/tags/pms/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>sync target support</title>
      <link>http://blog.xenoterracide.com/post/sync-target-support/</link>
      <pubDate>Sun, 21 Dec 2008 17:40:00 +0000</pubDate>
      
      <guid>http://blog.xenoterracide.com/post/sync-target-support/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://xenoterracide.blogspot.com/2008/12/sync-should-be-sync.html&#34;&gt;Here&lt;/a&gt; I explain why emerge &amp;ndash;sync should return to it&amp;rsquo;s original sync form.&lt;br /&gt;&lt;br /&gt;I think emerge sync should have the ability to have a target. Currently emerge &amp;ndash;sync has a target of the SYNC variable in make.conf or the default hardcoded. However, git support is being added to portage. git is a very powerful tool, and the &lt;a href=&#34;http://funtoo.org&#34;&gt;Funtoo&lt;/a&gt; project uses it to manage it&amp;rsquo;s full portage tree. git doesn&amp;rsquo;t work like rsync, it&amp;rsquo;s not so straight forward as rsync uri, which is effectively what emerge sync is doing. git supports branches. The current implementation of git in portage effectively does git pull &amp;hellip; which is great&amp;hellip; you know if you pull from the default.&lt;br /&gt;&lt;br /&gt;I don&amp;rsquo;t, and I&amp;rsquo;m not sure I&amp;rsquo;d always want to, it&amp;rsquo;d be great to be able to change tree&amp;rsquo;s on the fly with a more distributed model. If I want to test funtoo without pulling it&amp;rsquo;s tree into mine I could emerge sync funtoo funtoo.org, or I could switch to gentoo by doing an emerge sync rsync://rsync.gentoo.org/gentoo-portage and none of this will change the default or require configuring in make.conf. &lt;br /&gt;&lt;br /&gt;Biggest reason to do this is branches though. what if I have a development branch and I need to test something&amp;hellip; I, in theory should be able to change the branch quickly. with git I will have to cd to PORTDIR then run checkout. with portages current implementation I&amp;rsquo;ll have to reconfigure some of git and then do a sync. However, if I were able to add a target to it I could easily do emerge sync origin development or emerge sync origin master.&lt;br /&gt;&lt;br /&gt;The SYNC variable and maybe some GIT_BRANCH variable could still define defaults while adding a target would make development and testing easier for developers and testers respectively.&lt;div class=&#34;blogger-post-footer&#34;&gt;&lt;br /&gt;&amp;ndash;&lt;br /&gt;
This &lt;span xmlns:dc=&#34;http://purl.org/dc/elements/1.1/&#34; href=&#34;http://purl.org/dc/dcmitype/Text&#34; rel=&#34;dc:type&#34;&gt;work&lt;/span&gt; by &lt;a xmlns:cc=&#34;http://creativecommons.org/ns#&#34; href=&#34;http://www.xenoterracide.com&#34; property=&#34;cc:attributionName&#34; rel=&#34;cc:attributionURL&#34;&gt;Caleb Cushing&lt;/a&gt; is licensed under a &lt;a rel=&#34;license&#34; href=&#34;http://creativecommons.org/licenses/by-nc-sa/3.0/&#34;&gt;Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License&lt;/a&gt;.&lt;/div&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>accept input from stdin</title>
      <link>http://blog.xenoterracide.com/post/accept-input-from-stdin/</link>
      <pubDate>Thu, 30 Oct 2008 02:11:00 +0000</pubDate>
      
      <guid>http://blog.xenoterracide.com/post/accept-input-from-stdin/</guid>
      <description>&lt;p&gt;if possible emerge-ng should be able to accept input from &lt;STDIN&gt;.&lt;br /&gt;&lt;br /&gt;e.g. cat packagelist | emergeng&lt;br /&gt;&lt;br /&gt;thus far neither portage nore pkgcore have this capability.&lt;div class=&#34;blogger-post-footer&#34;&gt;&lt;br /&gt;&amp;ndash;&lt;br /&gt;
This &lt;span xmlns:dc=&#34;http://purl.org/dc/elements/1.1/&#34; href=&#34;http://purl.org/dc/dcmitype/Text&#34; rel=&#34;dc:type&#34;&gt;work&lt;/span&gt; by &lt;a xmlns:cc=&#34;http://creativecommons.org/ns#&#34; href=&#34;http://www.xenoterracide.com&#34; property=&#34;cc:attributionName&#34; rel=&#34;cc:attributionURL&#34;&gt;Caleb Cushing&lt;/a&gt; is licensed under a &lt;a rel=&#34;license&#34; href=&#34;http://creativecommons.org/licenses/by-nc-sa/3.0/&#34;&gt;Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License&lt;/a&gt;.&lt;/div&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>minimum permissions and privilegdges</title>
      <link>http://blog.xenoterracide.com/post/minimum-permissions-and-privilegdges/</link>
      <pubDate>Wed, 29 Oct 2008 00:53:00 +0000</pubDate>
      
      <guid>http://blog.xenoterracide.com/post/minimum-permissions-and-privilegdges/</guid>
      <description>&lt;p&gt;I like security&amp;hellip; which means I should be able to run portage as portage (user) and have the umask be 077, or perhaps 027. Unfortunately the last time I checked portage could handle these restrictive permissions (I forget if it was these exactly) except for one set&amp;hellip; java. In a perfect ebuild world all ebuilds would be able to be installed under a very restrictive umask.&lt;br /&gt;&lt;br /&gt;Should regen2 ever come to fruition this should be fixed.&lt;div class=&#34;blogger-post-footer&#34;&gt;&lt;br /&gt;&amp;ndash;&lt;br /&gt;
This &lt;span xmlns:dc=&#34;http://purl.org/dc/elements/1.1/&#34; href=&#34;http://purl.org/dc/dcmitype/Text&#34; rel=&#34;dc:type&#34;&gt;work&lt;/span&gt; by &lt;a xmlns:cc=&#34;http://creativecommons.org/ns#&#34; href=&#34;http://www.xenoterracide.com&#34; property=&#34;cc:attributionName&#34; rel=&#34;cc:attributionURL&#34;&gt;Caleb Cushing&lt;/a&gt; is licensed under a &lt;a rel=&#34;license&#34; href=&#34;http://creativecommons.org/licenses/by-nc-sa/3.0/&#34;&gt;Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License&lt;/a&gt;.&lt;/div&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>pkgcore the victor</title>
      <link>http://blog.xenoterracide.com/post/pkgcore-the-victor/</link>
      <pubDate>Tue, 28 Oct 2008 01:22:00 +0000</pubDate>
      
      <guid>http://blog.xenoterracide.com/post/pkgcore-the-victor/</guid>
      <description>&lt;p&gt;pkgcore is my pick for the next portage and codebase for emerge-ng. I admit I haven&amp;rsquo;t let paludis have a chance (yet).&lt;br /&gt;&lt;br /&gt;&lt;strong&gt;Why haven&amp;rsquo;t I let paludis have it&amp;rsquo;s chance?&lt;/strong&gt;&lt;br /&gt;&lt;br /&gt;The reasons are quite simple. Everytime I have tried paludis prior to this it has required extra configuration (meaning it doesn&amp;rsquo;t work out of the box). I believe this was fixed recently. However,&lt;br /&gt;&lt;br /&gt;&lt;blockquote&gt;&lt;br /&gt;&lt;code&gt;paludis@1208029212: [WARNING] Use of Portage configuration files will lead to sub-optimal performance and loss of functionality. Full support for Portage configuration formats is not guaranteed; issues should be reported via trac. You are strongly encouraged to migrate to a Paludis configuration.&lt;br /&gt;paludis@1208029212: [WARNING] Use of Portage configuration files will lead to sub-optimal performance and loss of functionality. Full support for Portage configuration formats is not guaranteed; issues should be reported via trac. You are strongly encouraged to migrate to a Paludis configuration.&lt;br /&gt;* Done cleaning write cache for ebuild format repositories&lt;br /&gt;paludis@1208029212: [WARNING] Use of Portage configuration files will lead to sub-optimal performance and loss of functionality. Full support for Portage configuration formats is not guaranteed; issues should be reported via trac. You are strongly encouraged to migrate to a Paludis configuration.&lt;/code&gt;&lt;br /&gt;&lt;/blockquote&gt;&lt;br /&gt;&lt;br /&gt;This is the end of a paludis &amp;ndash;sync. Annoying. Paludis also has it&amp;rsquo;s alpha releases marked as  ~arch, this is a no, no. I also found the people in #paludis on irc to be rude and unhelpful. I was annoyed at the time (so being rude myself) as gentoo kde-svn overlay was going to require paludis which means I was going to be forced to use it. Regardless I&amp;rsquo;ve never been met with lot&amp;rsquo;s of friendliness or help in #paludis. They are an RTFM crowd. I have been told to use paludis several times without even asking about it (as if it is the solution to all problems). So is pkgcore better? I can&amp;rsquo;t say without a doubt that it is.&lt;br /&gt;&lt;br /&gt;&lt;strong&gt;Why is pkgcore the victor?&lt;/strong&gt;&lt;br /&gt;&lt;br /&gt;For starter&amp;rsquo;s it&amp;rsquo;s only the victor for me. paludis is a more mature product at this point and has a stronger following of fanatic&amp;rsquo;s/zealot&amp;rsquo;s.&lt;br /&gt;&lt;br /&gt;1.) pkgcore it more similar to portage.&lt;br /&gt;&lt;br /&gt;pkgcore was originally intended to be portage 3. This leads to a large amount of similarities and backwards compatibility.&lt;br /&gt;&lt;br /&gt;2.) pkgcore devs are really friendly. Sometimes patience is a virtue getting an answer on #pkgcore but most of the times I get one. This allowed me to quickly learn what I could and could not (yet) do with pkgcore, including finding a bug within a week.&lt;br /&gt;&lt;br /&gt;3.) pkgcore just works. I installed pkgcore and with a quick look at the site was quickly able to start doing work with it.&lt;br /&gt;&lt;br /&gt;4.) pkgcore installs faster. I think it took like an hour to build paludis on this machine (maybe more) pkgcore took 2 minutes tops.&lt;br /&gt;&lt;br /&gt;5.) pkgcore uses C. For the parts of portage that were really slow they re-wrote them in C using cpython. using both python and c leads to faster development and speed where needed.&lt;br /&gt;&lt;br /&gt;&lt;strong&gt;How do I use pkgcore&lt;/strong&gt;&lt;br /&gt;real quick&lt;br /&gt;&lt;br /&gt;&lt;code&gt;pmaint sync&lt;/code&gt;&lt;br /&gt;&lt;br /&gt;this is the biggest adaption from portage, imho and I&amp;rsquo;m not sure why it&amp;rsquo;s not &amp;ndash;sync or pmerge &amp;ndash;sync (in some ways it&amp;rsquo;s more similar to portage 2.0 syntax). This will not only sync your main gentoo tree but any repositories you&amp;rsquo;ve intalled with layman. as of yet you still have to install them via layman, but this may change in the future.&lt;br /&gt;&lt;br /&gt;&lt;code&gt;pmerge packagename&lt;/code&gt;&lt;br /&gt;&lt;br /&gt;I told you this was easy. Most of the options I use work. The biggest that doesn&amp;rsquo;t is &amp;ndash;verbose, this seems to be default now (with &amp;ndash;ask) so an option is no longer needed. updating world&lt;br /&gt;&lt;br /&gt;&lt;code&gt;pmerge -auDs world&lt;/code&gt;&lt;br /&gt;&lt;br /&gt;an -s is now needed to work with things like system and  world. It&amp;rsquo;s for package set. My one complaint here is the &amp;ndash;newuse doesn&amp;rsquo;t currently work with sets. This is a bug and will be fixed in the future.&lt;br /&gt;&lt;br /&gt;&lt;strong&gt;Is &lt;em&gt;anything&lt;/em&gt; wrong with pkgcore in your eyes?&lt;/strong&gt;&lt;br /&gt;&lt;br /&gt;well aside from the plethora of missing features (they&amp;rsquo;ll get done, it&amp;rsquo;s just a time thing). Documentation&amp;hellip; I usually learn stuff by reading web documentation (or books) until I&amp;rsquo;m comfortable enough reading man pages. The web documentation for pkgcore needs a lot of work. I may actually volunteer to help with this. I haven&amp;rsquo;t decided yet, and it depends partially on if they want to answer all my questions as I write the docs.&lt;br /&gt;&lt;br /&gt;It&amp;rsquo;d be nice if at some point pmerge could become emerge etc&amp;hellip; (meaning reprise it&amp;rsquo;s roll as portage 3).&lt;br /&gt;&lt;br /&gt;for more information on pkgcore go to &lt;a href=&#34;http://www.pkgcore.org/trac/pkgcore&#34;&gt;pkgcore.org&lt;/a&gt;&lt;div class=&#34;blogger-post-footer&#34;&gt;&lt;br /&gt;&amp;ndash;&lt;br /&gt;
This &lt;span xmlns:dc=&#34;http://purl.org/dc/elements/1.1/&#34; href=&#34;http://purl.org/dc/dcmitype/Text&#34; rel=&#34;dc:type&#34;&gt;work&lt;/span&gt; by &lt;a xmlns:cc=&#34;http://creativecommons.org/ns#&#34; href=&#34;http://www.xenoterracide.com&#34; property=&#34;cc:attributionName&#34; rel=&#34;cc:attributionURL&#34;&gt;Caleb Cushing&lt;/a&gt; is licensed under a &lt;a rel=&#34;license&#34; href=&#34;http://creativecommons.org/licenses/by-nc-sa/3.0/&#34;&gt;Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License&lt;/a&gt;.&lt;/div&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Graphical Package Manager</title>
      <link>http://blog.xenoterracide.com/post/graphical-package-manager/</link>
      <pubDate>Sun, 26 Oct 2008 00:51:00 +0000</pubDate>
      
      <guid>http://blog.xenoterracide.com/post/graphical-package-manager/</guid>
      <description>&lt;p&gt;Anyone that knows how I work in linux, knows that I&amp;rdquo;m comfortable with the cli, and prefer it to a gui. I know that not everyone is or should have to be. Sometimes a gui can make management easier. Even a die hard cli person like me realizes that. However, you should never have to do things the gui way, they are just front ends. emerge-ng needs to support having a gui even if the development of such a project is not directly part of the emerge-ng project.&lt;div class=&#34;blogger-post-footer&#34;&gt;&lt;br /&gt;&amp;ndash;&lt;br /&gt;
This &lt;span xmlns:dc=&#34;http://purl.org/dc/elements/1.1/&#34; href=&#34;http://purl.org/dc/dcmitype/Text&#34; rel=&#34;dc:type&#34;&gt;work&lt;/span&gt; by &lt;a xmlns:cc=&#34;http://creativecommons.org/ns#&#34; href=&#34;http://www.xenoterracide.com&#34; property=&#34;cc:attributionName&#34; rel=&#34;cc:attributionURL&#34;&gt;Caleb Cushing&lt;/a&gt; is licensed under a &lt;a rel=&#34;license&#34; href=&#34;http://creativecommons.org/licenses/by-nc-sa/3.0/&#34;&gt;Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License&lt;/a&gt;.&lt;/div&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>More than 3 levels of stable</title>
      <link>http://blog.xenoterracide.com/post/more-than-3-levels-of-stable/</link>
      <pubDate>Fri, 24 Oct 2008 11:17:00 +0000</pubDate>
      
      <guid>http://blog.xenoterracide.com/post/more-than-3-levels-of-stable/</guid>
      <description>&lt;p&gt;Currently Gentoo has arch, ~arch, and ~M ( - if not available ).&lt;br /&gt;&lt;br /&gt;One of the main things people want are security patches only updates. I tend to agree with this, although they should be between arch and ~arch, maybe +arch. Technically a security patch can break things which is why they shouldn&amp;rsquo;t be considered stable.&lt;br /&gt;&lt;br /&gt;Regen2 should also have strict rules about what&amp;rsquo;s what. Alpha products should always be ~M, beta&amp;rsquo;s and rc&amp;rsquo;s should be ~arch. The wouldn&amp;rsquo;t be listed as those upstream if they were stable, and if upstream says they are stable then tell upstream to move them to stable.&lt;br /&gt;&lt;br /&gt;We should add an unmaintained level akin to ~M, perhaps ~U, this is so just because the current maintainer doesn&amp;rsquo;t want it in the tree, it doesn&amp;rsquo;t go completely away (in the event someone wants to pick it up and fix it).&lt;br /&gt;&lt;br /&gt;we should have some way of setting up the vcs packages by arch.&lt;div class=&#34;blogger-post-footer&#34;&gt;&lt;br /&gt;&amp;ndash;&lt;br /&gt;
This &lt;span xmlns:dc=&#34;http://purl.org/dc/elements/1.1/&#34; href=&#34;http://purl.org/dc/dcmitype/Text&#34; rel=&#34;dc:type&#34;&gt;work&lt;/span&gt; by &lt;a xmlns:cc=&#34;http://creativecommons.org/ns#&#34; href=&#34;http://www.xenoterracide.com&#34; property=&#34;cc:attributionName&#34; rel=&#34;cc:attributionURL&#34;&gt;Caleb Cushing&lt;/a&gt; is licensed under a &lt;a rel=&#34;license&#34; href=&#34;http://creativecommons.org/licenses/by-nc-sa/3.0/&#34;&gt;Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License&lt;/a&gt;.&lt;/div&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>buildpkg</title>
      <link>http://blog.xenoterracide.com/post/buildpkg/</link>
      <pubDate>Sun, 19 Oct 2008 06:31:00 +0000</pubDate>
      
      <guid>http://blog.xenoterracide.com/post/buildpkg/</guid>
      <description>&lt;p&gt;emerge-ng should be able to build rpms, and debs. regen2 should be the distro that builds other distro&amp;rsquo;s, not only should it be good at that (gentoo is now) it should be designed for it.&lt;div class=&#34;blogger-post-footer&#34;&gt;&lt;br /&gt;&amp;ndash;&lt;br /&gt;
This &lt;span xmlns:dc=&#34;http://purl.org/dc/elements/1.1/&#34; href=&#34;http://purl.org/dc/dcmitype/Text&#34; rel=&#34;dc:type&#34;&gt;work&lt;/span&gt; by &lt;a xmlns:cc=&#34;http://creativecommons.org/ns#&#34; href=&#34;http://www.xenoterracide.com&#34; property=&#34;cc:attributionName&#34; rel=&#34;cc:attributionURL&#34;&gt;Caleb Cushing&lt;/a&gt; is licensed under a &lt;a rel=&#34;license&#34; href=&#34;http://creativecommons.org/licenses/by-nc-sa/3.0/&#34;&gt;Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License&lt;/a&gt;.&lt;/div&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>emerge-ng multiple trees</title>
      <link>http://blog.xenoterracide.com/post/emerge-ng-multiple-trees/</link>
      <pubDate>Tue, 14 Oct 2008 23:29:00 +0000</pubDate>
      
      <guid>http://blog.xenoterracide.com/post/emerge-ng-multiple-trees/</guid>
      <description>&lt;p&gt;first I hate repositories, but it is unlikely they will go away. So we must strive to make sure that they are only needed for truly rare things. from my perspective the sunrise repo shouldn&amp;rsquo;t exist. and vcs builds  should be in the tree. regen2 should strive to have everything possible in the tree. when it can&amp;rsquo;t an overlay should have all the capabilities of the main tree. meaning that an overlay shouldn&amp;rsquo;t automagically be considered less stable and require the keywording of all the ebuilds in it. also overlay&amp;rsquo;s should be search-able regardless of whether they are installed to expedite the finding of apps.&lt;div class=&#34;blogger-post-footer&#34;&gt;&lt;br /&gt;&amp;ndash;&lt;br /&gt;
This &lt;span xmlns:dc=&#34;http://purl.org/dc/elements/1.1/&#34; href=&#34;http://purl.org/dc/dcmitype/Text&#34; rel=&#34;dc:type&#34;&gt;work&lt;/span&gt; by &lt;a xmlns:cc=&#34;http://creativecommons.org/ns#&#34; href=&#34;http://www.xenoterracide.com&#34; property=&#34;cc:attributionName&#34; rel=&#34;cc:attributionURL&#34;&gt;Caleb Cushing&lt;/a&gt; is licensed under a &lt;a rel=&#34;license&#34; href=&#34;http://creativecommons.org/licenses/by-nc-sa/3.0/&#34;&gt;Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License&lt;/a&gt;.&lt;/div&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>emerge-ng</title>
      <link>http://blog.xenoterracide.com/post/emerge-ng/</link>
      <pubDate>Thu, 09 Oct 2008 16:45:00 +0000</pubDate>
      
      <guid>http://blog.xenoterracide.com/post/emerge-ng/</guid>
      <description>&lt;p&gt;at the time of this writing. a concept for software with a name that may not be it&amp;rsquo;s final, and it may never get done.&lt;br /&gt;&lt;br /&gt;emerge-ng should ultimately be a drop in replacement for the portage package (the main package manager) in &lt;a href=&#34;http://gentoo.org&#34;&gt;gentoo linux&lt;/a&gt;.&lt;br /&gt;&lt;br /&gt;for clarity I will be referring to portage as the software and if I mean to refer to portage&amp;rsquo;s tree (basically one giant software repository), I will refer to it that way.&lt;br /&gt;&lt;br /&gt;I know of at least 3 other projects to replace the outdated barely maintainable portage. I think all of them are going about it wrong. They are developing different package manager&amp;rsquo;s instead of developing a better version of emerge. They are right that portage needs to be rebuilt from ground up, but that doesn&amp;rsquo;t mean that the interface the user sees is bad. if vim had not tried to be mostly a clone of vi would it have been as successful?  so successful that is it more popular than what it cloned? if gnu coreutils weren&amp;rsquo;t posix compliant and didn&amp;rsquo;t mostly match the original unix commands would we be using them? probably not.&lt;br /&gt;&lt;br /&gt;I will be writing posts here to detail features that emerge-ng can benefit from.&lt;div class=&#34;blogger-post-footer&#34;&gt;&lt;br /&gt;&amp;ndash;&lt;br /&gt;
This &lt;span xmlns:dc=&#34;http://purl.org/dc/elements/1.1/&#34; href=&#34;http://purl.org/dc/dcmitype/Text&#34; rel=&#34;dc:type&#34;&gt;work&lt;/span&gt; by &lt;a xmlns:cc=&#34;http://creativecommons.org/ns#&#34; href=&#34;http://www.xenoterracide.com&#34; property=&#34;cc:attributionName&#34; rel=&#34;cc:attributionURL&#34;&gt;Caleb Cushing&lt;/a&gt; is licensed under a &lt;a rel=&#34;license&#34; href=&#34;http://creativecommons.org/licenses/by-nc-sa/3.0/&#34;&gt;Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License&lt;/a&gt;.&lt;/div&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>