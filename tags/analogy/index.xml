<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Analogy on Caleb Cushing&#39;s blog</title>
    <link>http://blog.xenoterracide.com/tags/analogy/index.xml</link>
    <description>Recent content in Analogy on Caleb Cushing&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <atom:link href="http://blog.xenoterracide.com/tags/analogy/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Difference Between a Database and a Database Instance</title>
      <link>http://blog.xenoterracide.com/post/difference-between-a-database-and-a-database-instance/</link>
      <pubDate>Tue, 10 Nov 2009 15:00:00 +0000</pubDate>
      
      <guid>http://blog.xenoterracide.com/post/difference-between-a-database-and-a-database-instance/</guid>
      <description>&lt;p&gt;I was prowling &lt;a href=&#34;http://stackoverflow.com&#34;&gt;StackOverflow&lt;/a&gt; today and &lt;a href=&#34;http://stackoverflow.com/questions/1705381/is-there-a-reason-to-use-two-databases/&#34;&gt;the question&lt;/a&gt; was asked when you would use 2 databases. I&amp;rsquo;m amazed at the number of answers of replication and sharding (some under the guise of some other description). The only answer I can think of to be correct is Different Applications/Services (shared hosting probably falls under those 2 in a weird way). I&amp;rsquo;m going to explain why a replicated database and/or a sharded database are not multiple databases.&lt;br /&gt;&lt;br /&gt;Firstly, we must understand what a database is and is not. A database is not a computer program that runs and stores data, this is DBMS (Database Management System). A database simply is a collection of data. A database is an organized collection of data. Many Definitions of a Database include computers, however not all do, in fact Joe Celko argues that first database were precursors to written language in the Middle East (see &lt;a href=&#34;http://www.amazon.com/Joe-Celkos-Data-Databases-Management/dp/1558604324/ref=pd_sim_b_6&#34;&gt;Data and Databases&lt;/a&gt; Chapter 1). It may be true that database are organized for quick retrieval of information in a certain way, however they are not necessarily designed for quick retrieval of all information, in any way.&lt;br /&gt;&lt;br /&gt;So what are some example&amp;rsquo;s of a Non Computer Database? A phone book is a good example of a database. It&amp;rsquo;s really fast to look someone up if you know there last name, but not if all you have is their phone number and you want their address. You&amp;rsquo;ll Also note that it&amp;rsquo;s got various ways of searching if you&amp;rsquo;re looking for businesses. It is not a good example of a normalized database, but I&amp;rsquo;m not sure that&amp;rsquo;s possible with a paper database that allows you to find the same information in multiple ways. A phone book is simply a collection of Names, Addresses, and Phone Numbers, and Categories (tags).&lt;br /&gt;&lt;br /&gt;So wouldn&amp;rsquo;t two phone books be two databases? well if they are published by different vendors, or at different times, then yes. However, if you have two copies of the same phone book, then you have two instances of that database, that have been &amp;lsquo;replicated&amp;rsquo; from a &amp;lsquo;master&amp;rsquo; copy. You can&amp;rsquo;t update one of these &amp;lsquo;slave&amp;rsquo; copy&amp;rsquo;s and expect them to replicate, you must update the &amp;lsquo;master&amp;rsquo; and publish the updates. Unlike computer Phone books are extremely slow to push updates. Let&amp;rsquo;s say you want to call a friend, Steven, over for pizza, and your roommate, John, wants to try a new pizza place. John can look at one copy of the phone book to look up the addresses and phone numbers of  to the new pizza places you haven&amp;rsquo;t tried, while you look up Steven&amp;rsquo;s number in your copy of the book. This is exactly what happens with replication, different requesters doing lookups from different databases.&lt;br /&gt;&lt;br /&gt;Now let&amp;rsquo;s talk sharding, phone books aren&amp;rsquo;t sharded right? wrong! they are phone books are sharded by location. The entire phone book database for even 1 state would be too big for them to distribute, so they split it up into smaller regions. Only the phone book company has the entire list. So that makes it kind of a bad example. Let&amp;rsquo;s talk about encyclopedia&amp;rsquo;s instead. They are a much better example since you don&amp;rsquo;t generally buy one encyclopedia, you buy the whole set (which is also replicated and you can think of it&amp;rsquo;s replication in the same way as phone books). Each encyclopedia volume tells on the side which letters it contains, so when you open it you know you&amp;rsquo;re in the right vicinity. This is how a shard works, your database got too big an unmanageable as a whole so you split it up into &amp;lsquo;shards&amp;rsquo; or &amp;lsquo;partitions&amp;rsquo; to make it faster to search and easier to handle and store.&lt;br /&gt;&lt;br /&gt;Now to clarify my answer to that original question. You wouldn&amp;rsquo;t put a phone number (phone entry not included) in an encyclopedia even though I&amp;rsquo;m sure Bill Clinton has one, you might list it in the phone book though. So now you see when you would use a different database. Very clearly you would use one when the type of data is different enough, when it&amp;rsquo;s for different organizations, or when it&amp;rsquo;s for kind of shared service.&lt;br /&gt;&lt;br /&gt;I hope these analogies to computer databases have helped explain the concepts.&lt;div class=&#34;blogger-post-footer&#34;&gt;&lt;br /&gt;&amp;ndash;&lt;br /&gt;
This &lt;span xmlns:dc=&#34;http://purl.org/dc/elements/1.1/&#34; href=&#34;http://purl.org/dc/dcmitype/Text&#34; rel=&#34;dc:type&#34;&gt;work&lt;/span&gt; by &lt;a xmlns:cc=&#34;http://creativecommons.org/ns#&#34; href=&#34;http://www.xenoterracide.com&#34; property=&#34;cc:attributionName&#34; rel=&#34;cc:attributionURL&#34;&gt;Caleb Cushing&lt;/a&gt; is licensed under a &lt;a rel=&#34;license&#34; href=&#34;http://creativecommons.org/licenses/by-nc-sa/3.0/&#34;&gt;Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License&lt;/a&gt;.&lt;/div&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>