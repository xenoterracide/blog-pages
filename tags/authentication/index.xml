<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Authentication on Caleb Cushing&#39;s blog</title>
    <link>http://blog.xenoterracide.com/tags/authentication/index.xml</link>
    <description>Recent content in Authentication on Caleb Cushing&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <atom:link href="http://blog.xenoterracide.com/tags/authentication/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>PostgreSQL initial setup (authentication) Part 2</title>
      <link>http://blog.xenoterracide.com/post/postgresql-initial-setup-authentication-part-2/</link>
      <pubDate>Tue, 19 Jan 2010 11:37:00 +0000</pubDate>
      
      <guid>http://blog.xenoterracide.com/post/postgresql-initial-setup-authentication-part-2/</guid>
      <description>&lt;p&gt;I ran into so problems and lack of information with my last &lt;a href=&#34;http://xenoterracide.blogspot.com/2009/08/postgresql-initial-setup-authentication.html&#34;&gt;post on this topic&lt;/a&gt;. Firstly my syntax for &lt;code&gt;local all all to local all all ident devel&lt;br /&gt;&lt;/code&gt; doesn&amp;rsquo;t seem to work in my current setup. It&amp;rsquo;s possible that it has something to do with the configuration of the Debian/Ubuntu server I was basing that against, and now my targets are Arch Linux and Slackware.&lt;br /&gt;&lt;br /&gt;So our goal here will be to provide an alternate user that can log in as postgres via ident. why would you want to do this? maybe you&amp;rsquo;re tired of su - to the postgres unix user after logging in as your administrative user (root?).&lt;br /&gt;&lt;br /&gt;First we need to open our pg_ident.conf and add the following line.&lt;br /&gt;&lt;br /&gt;&lt;code&gt;admin root postgres&lt;/code&gt;&lt;br /&gt;&lt;br /&gt;So as I said in the last post on this: &amp;ldquo;admin&amp;rdquo; is an arbitrary identifier, root is the system user, and postgres is the database user. Now let&amp;rsquo;s go ahead and make sure the postgres system user can still login.&lt;br /&gt;&lt;br /&gt;&lt;code&gt;admin postgres postgres&lt;/code&gt;&lt;br /&gt;&lt;br /&gt;ok that&amp;rsquo;s all we need to do in the pg_ident.conf. Go ahead and open pg_hba.conf and add this line above the default 3 lines in the file.&lt;br /&gt;&lt;br /&gt;&lt;code&gt;local all postgres ident map=admin&lt;/code&gt;&lt;br /&gt;&lt;br /&gt;as a breakdown: local is for socket connections, all means all databases, ident means it&amp;rsquo;s checking for local users, and map=admin says look at the users in the admin identifier in pg_ident.conf.&lt;br /&gt;&lt;br /&gt;Now you should be able to run psql dname postgres as root. You will not be able to use the db postgres user as any system user not in the admin map.&lt;div class=&#34;blogger-post-footer&#34;&gt;&lt;br /&gt;&amp;ndash;&lt;br /&gt;
This &lt;span xmlns:dc=&#34;http://purl.org/dc/elements/1.1/&#34; href=&#34;http://purl.org/dc/dcmitype/Text&#34; rel=&#34;dc:type&#34;&gt;work&lt;/span&gt; by &lt;a xmlns:cc=&#34;http://creativecommons.org/ns#&#34; href=&#34;http://www.xenoterracide.com&#34; property=&#34;cc:attributionName&#34; rel=&#34;cc:attributionURL&#34;&gt;Caleb Cushing&lt;/a&gt; is licensed under a &lt;a rel=&#34;license&#34; href=&#34;http://creativecommons.org/licenses/by-nc-sa/3.0/&#34;&gt;Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License&lt;/a&gt;.&lt;/div&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Bypassing disabled accounts with KDM</title>
      <link>http://blog.xenoterracide.com/post/bypassing-disabled-accounts-with-kdm/</link>
      <pubDate>Mon, 16 Nov 2009 19:06:00 +0000</pubDate>
      
      <guid>http://blog.xenoterracide.com/post/bypassing-disabled-accounts-with-kdm/</guid>
      <description>&lt;p&gt;So the most common way of disabling an account in a unix system is changing the users shell in /etc/passwd to /bin/false or /sbin/nologin. However, I&amp;rsquo;ve discovered on Arch Linux that if I do this only shell login&amp;rsquo;s are disabled, I was still able to log the user in with gui via kdm. I also tried using usermod &amp;ndash;expiredate 1. this was not effective either however. the only way I found to lock the account from kdm login was to do a passwd -l accountname, which only locks password authentication. This means key and token authentication should still work. My real concern is that if the user was set to login without a password that it would still be bypass-able. My personal opinion is that I shouldn&amp;rsquo;t have to do more than 1 thing  to disable a user account in a 100% effective manner. Currently Arch Linux (and maybe more) fails at this. I&amp;rsquo;ll post a fix later as I investigate further.&lt;br /&gt;&lt;br /&gt;Bugs I filed are at &lt;a href=&#34;https://bugs.kde.org/show_bug.cgi?id=214616&#34;&gt;kde&lt;/a&gt; and &lt;a href=&#34;http://bugs.archlinux.org/task/17157&#34;&gt;Arch Linux&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;EDIT: expire date worked&amp;hellip; just not immediately, very odd.&lt;br /&gt;&lt;br /&gt;EDIT: Here&amp;rsquo;s a proper /etc/pam.d/kde&lt;br /&gt;&lt;pre&gt;&lt;code&gt;&lt;br /&gt;#%PAM-1.0&lt;br /&gt;auth        required    pam_nologin.so&lt;br /&gt;auth        required    pam_unix.so nullok&lt;br /&gt;auth        required    pam_shells.so&lt;br /&gt;auth required pam_tally.so onerr=succeedfile=/var/log/faillog&lt;br /&gt;account     required    pam_access.so&lt;br /&gt;account     required    pam_time.so&lt;br /&gt;account     required    pam_unix.so&lt;br /&gt;password    required    pam_unix.so&lt;br /&gt;session     required    pam_unix.so&lt;br /&gt;session     required    pam_env.so&lt;br /&gt;session     required    pam_limits.so&lt;br /&gt;&lt;/pre&gt;&lt;/code&gt;&lt;div class=&#34;blogger-post-footer&#34;&gt;&lt;br /&gt;&amp;ndash;&lt;br /&gt;
This &lt;span xmlns:dc=&#34;http://purl.org/dc/elements/1.1/&#34; href=&#34;http://purl.org/dc/dcmitype/Text&#34; rel=&#34;dc:type&#34;&gt;work&lt;/span&gt; by &lt;a xmlns:cc=&#34;http://creativecommons.org/ns#&#34; href=&#34;http://www.xenoterracide.com&#34; property=&#34;cc:attributionName&#34; rel=&#34;cc:attributionURL&#34;&gt;Caleb Cushing&lt;/a&gt; is licensed under a &lt;a rel=&#34;license&#34; href=&#34;http://creativecommons.org/licenses/by-nc-sa/3.0/&#34;&gt;Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License&lt;/a&gt;.&lt;/div&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>PostgreSQL initial setup (authentication)</title>
      <link>http://blog.xenoterracide.com/post/postgresql-initial-setup-authentication/</link>
      <pubDate>Mon, 24 Aug 2009 01:00:00 +0000</pubDate>
      
      <guid>http://blog.xenoterracide.com/post/postgresql-initial-setup-authentication/</guid>
      <description>&lt;p&gt;If you followed my &lt;a href=&#34;http://xenoterracide.blogspot.com/2009/03/postgresql-initial-setup-users-and.html&#34;&gt;last initial setup&lt;/a&gt; post on creating users and are running a default install of postgres you currently should be able to access the database on your cli. However, many distributions do not install postgres in a default manner. A great many distributions make the default authentication for sockets &lt;code&gt;ident sameuser&lt;/code&gt;. This is technically much more secure than &lt;code&gt;trust&lt;/code&gt; which is the default. However, you may find yourself locked out of your database on the local cli if you make the database name different. I personally was confused about this after first encountering this setting.&lt;br /&gt;&lt;br /&gt;So, we don&amp;rsquo;t want &lt;code&gt;trust&lt;/code&gt; but we want to use a db username other than our shell login, most likely because we have more than one database. There are several options but I personally think &lt;code&gt;ident&lt;/code&gt; is a good one. However, since we don&amp;rsquo;t want to use the same shell login name we have to modify &lt;code&gt;pg_ident.conf&lt;/code&gt; and &lt;code&gt;pg_hba.conf&lt;/code&gt;, locations vary by distribution.&lt;br /&gt;&lt;br /&gt;In &lt;code&gt;pg_ident.conf&lt;/code&gt; you have to create a line with the following formatting.&lt;br /&gt;&lt;br /&gt;&lt;code&gt;# MAPNAME     IDENT-USERNAME    PG-USERNAME&lt;/code&gt;&lt;br /&gt;&lt;br /&gt;I think it&amp;rsquo;s mostly straightforward. In case it isn&amp;rsquo;t, MAPNAME is an arbitrary identifier, sameuser is actually the mapname in &lt;code&gt;ident sameuser&lt;/code&gt; A quick example from mine would be&lt;br /&gt;&lt;br /&gt;&lt;code&gt;devel xenoterracide webdev&lt;/code&gt;where my unix username is xenoterracide but I created the database user webdev. If you wanted you could add another devel mapname with another user or the same unix account different db account, or even a different unix account same db account, etc.&lt;br /&gt;&lt;br /&gt;After you add all the various mappings you need to add or change the ident in pg_hba.conf. You can only have one method per type/database/user/address combination. so in pg_hba.conf you want to change &lt;br /&gt;&lt;br /&gt;&lt;code&gt; local all all &lt;trust or ident sameuser&gt;&lt;/code&gt; to &lt;code&gt;local all all ident devel&lt;/code&gt;&lt;br /&gt;&lt;br /&gt;If you want postgres to ask for a password use &lt;code&gt;md5&lt;/code&gt; instead of &lt;code&gt;ident&lt;/code&gt; further information can be found at &lt;a href=&#34;http://www.postgresql.org/docs/current/interactive/auth-methods.html&#34;&gt;http://www.postgresql.org/docs/current/interactive/auth-methods.html&lt;/a&gt;.&lt;br /&gt;&lt;br /&gt;if you have any problems you might want to see &lt;a href=&#34;http://xenoterracide.blogspot.com/2010/01/postgresql-initial-setup-authentication.html&#34;&gt;part 2&lt;/a&gt;.&lt;div class=&#34;blogger-post-footer&#34;&gt;&lt;br /&gt;&amp;ndash;&lt;br /&gt;
This &lt;span xmlns:dc=&#34;http://purl.org/dc/elements/1.1/&#34; href=&#34;http://purl.org/dc/dcmitype/Text&#34; rel=&#34;dc:type&#34;&gt;work&lt;/span&gt; by &lt;a xmlns:cc=&#34;http://creativecommons.org/ns#&#34; href=&#34;http://www.xenoterracide.com&#34; property=&#34;cc:attributionName&#34; rel=&#34;cc:attributionURL&#34;&gt;Caleb Cushing&lt;/a&gt; is licensed under a &lt;a rel=&#34;license&#34; href=&#34;http://creativecommons.org/licenses/by-nc-sa/3.0/&#34;&gt;Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License&lt;/a&gt;.&lt;/div&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>More Security = Better. Wrong!</title>
      <link>http://blog.xenoterracide.com/post/more-security--better.-wrong/</link>
      <pubDate>Sat, 22 Aug 2009 19:54:00 +0000</pubDate>
      
      <guid>http://blog.xenoterracide.com/post/more-security--better.-wrong/</guid>
      <description>&lt;p&gt;So I just had a discussion on &lt;a href=&#34;irc://chat.freenode.net/ubuntu-server&#34;&gt;#ubuntu-server on freenode&lt;/a&gt; about why my not having a password to connect to postgresql via a socket (read local cli) is insecure. So I asked them, how exactly is it that someone is going to get this access? The answer &amp;ldquo;there are bad people on the Internet&amp;rdquo;. I&amp;rsquo;m sure many people right now are agreeing with them and thinking I&amp;rsquo;m crazy. Let&amp;rsquo;s discuss my setup though shall we.&lt;br /&gt;&lt;br /&gt;Postgres: I&amp;rsquo;m using Ident, and not just sameuser ident. no I had to set a custom rule in the pg_ident.conf file for this user to access because the systemuser != the db user. so just typing psql at the command line should you get access still won&amp;rsquo;t get you into the db. you have to know which user/database to connect to. But that&amp;rsquo;s not that hard right? in fact it&amp;rsquo;s trivial.In addition you have to be a certain systemuser, only one works.&lt;br /&gt;&lt;br /&gt;User Access: There is only one user account on the system that can be logged into (it&amp;rsquo;s not root or a generic name). Only 2 people have the credentials to get shell access. One is my host, who happens to have physical and kvm access. The other is me who has ssh access.&lt;br /&gt;&lt;br /&gt;SSH: I have ssh on a high port with no password authentication, or root, allowed.&lt;br /&gt;&lt;br /&gt;So in order to passwordlessly access the database you would have to ssh into the system from a remote location or find an exploitable bug in apache (the only other service listening, or the kernel) that allows you to switch to my non apache user (meaning root access).&lt;br /&gt;&lt;br /&gt;In addition, this system user had rw access to the entire website which includes a file containing the password to the database in plain text. So let&amp;rsquo;s say I created a .pgpass file or variables? what exactly is it that would keep anyone who has access to this account from gaining access to the database? in fact wouldn&amp;rsquo;t it just make it easier, since pgpass has a known location and contains all connection info including the username/dbname string? &lt;br /&gt;&lt;br /&gt;But why do I need passwordless access anyways? I wrote a script that dumps the db every hour to a git repo and then pushes that to a remote.&lt;br /&gt;&lt;br /&gt;Could I secure it further? yeah I could. I could make the script run as a user who can&amp;rsquo;t log in at all and then put a pgpass in that users account. I&amp;rsquo;d have to properly ACL the webroot to give the correct write and read access. But is all this really necessary? maybe and I might do it, but at this point it&amp;rsquo;s not nearly as important as it was for me to get backups up and running, because regardless of all the security I implement, if I have no backup and someone finds that loophole in one of the pieces of software and uses it, I might just be screwed. At least now I can restore the site if it gets attacked.&lt;br /&gt;&lt;br /&gt;P.S. I was having a problem with my backup not being run by cron, never did figure out why.&lt;div class=&#34;blogger-post-footer&#34;&gt;&lt;br /&gt;&amp;ndash;&lt;br /&gt;
This &lt;span xmlns:dc=&#34;http://purl.org/dc/elements/1.1/&#34; href=&#34;http://purl.org/dc/dcmitype/Text&#34; rel=&#34;dc:type&#34;&gt;work&lt;/span&gt; by &lt;a xmlns:cc=&#34;http://creativecommons.org/ns#&#34; href=&#34;http://www.xenoterracide.com&#34; property=&#34;cc:attributionName&#34; rel=&#34;cc:attributionURL&#34;&gt;Caleb Cushing&lt;/a&gt; is licensed under a &lt;a rel=&#34;license&#34; href=&#34;http://creativecommons.org/licenses/by-nc-sa/3.0/&#34;&gt;Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License&lt;/a&gt;.&lt;/div&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>