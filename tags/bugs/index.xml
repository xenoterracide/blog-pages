<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Bugs on Caleb Cushing&#39;s blog</title>
    <link>http://blog.xenoterracide.com/tags/bugs/index.xml</link>
    <description>Recent content in Bugs on Caleb Cushing&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <atom:link href="http://blog.xenoterracide.com/tags/bugs/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>RT git workflow</title>
      <link>http://blog.xenoterracide.com/post/rt-git-workflow/</link>
      <pubDate>Thu, 17 Jun 2010 20:16:00 +0000</pubDate>
      
      <guid>http://blog.xenoterracide.com/post/rt-git-workflow/</guid>
      <description>&lt;p&gt;git was designed to be very flexible in its workflow. One of the things it was designed to do was handle email patches, since there are a lot of patches sent to and from the mailing list. This is a good thing, even if you don&amp;rsquo;t have a mailing list, or you have your own bug tracker (in addition to RT), you can use RT to receive email patches from git. First you have to configure your MUA (mail client)(and go write a patch), some suggestions are given in &lt;a href=&#34;http://git.kernel.org/?p=git/git.git;a=blob;f=Documentation/SubmittingPatches;h=eb53e0636e3c3bab06e88ce3371945f5602c5756;hb=d0b8d79510cd9c45a4c6bc08a37c6348f8293e8a&#34;&gt;git.git&amp;rsquo;s SubmittingPatches document&lt;/a&gt;. If you like the CLI I suggest you use the &lt;code&gt;git send-email&lt;/code&gt; command. I&amp;rsquo;m going to walk you through using it, but you&amp;rsquo;ll have to learn how to set it up for your smtp server on your own (one hint: if you don&amp;rsquo;t provide an smtp pass as an argument or as a config option you will be prompted for it).&lt;br /&gt;&lt;br /&gt;now you have a patch that you haven&amp;rsquo;t pushed yet. you can run one of the following sets of steps to get going.&lt;br /&gt;&lt;code&gt;&lt;pre&gt;git format-patch -M HEAD~1 # commitish. commit before the number of patches you want to generate&lt;br /&gt;vi 0001-patch-name # and add some description between the &amp;mdash; and the diff stat&lt;br /&gt;git send-email 0001-patch-name # can replace this step with MUA of choice&lt;br /&gt;&lt;/pre&gt;&lt;/code&gt; &lt;br /&gt;&lt;code&gt;&lt;pre&gt;git format-patch -M HEAD~5 # generate a patchset of the last 5 patches&lt;br /&gt;git send-email &amp;ndash;annotate *patch # will open the core.editor you set in gitconfig to edit the patch&lt;br /&gt;&lt;/pre&gt;&lt;/code&gt;&lt;br /&gt;&lt;code&gt;&lt;pre&gt;git send-email &amp;ndash;annotate &amp;ndash;format-patch -M &amp;ndash;to=destination-email origin/master&lt;br /&gt;# generate all the patches that aren&amp;rsquo;t committed against origin/master branch in your local branch&lt;br /&gt;&lt;/pre&gt;&lt;/code&gt;&lt;br /&gt;&lt;br /&gt;for the time being you should probably just send it to one of your own projects on cpan so you can see. If you look at the web interface for the bug you&amp;rsquo;ll notice it&amp;rsquo;s clobbered your formatting, same goes with the email RT sends you&amp;hellip; so this is useless right? well&amp;hellip; certainly doesn&amp;rsquo;t help&amp;hellip; now look at the &amp;lsquo;with headers&amp;rsquo; version. Their are lots of headers here, but all your content is intact. Now download this file (right click save as should do it).&lt;br /&gt;&lt;br /&gt;you may now ( you may have to run git reset &amp;ndash;hard HEAD^ first to undo you last commit).&lt;br /&gt;&lt;code&gt;git apply downloaded-file.txt&lt;/code&gt;&lt;br /&gt;&lt;br /&gt;which will only apply the diff no commit log or anything (reset without HEAD^ now).&lt;br /&gt;&lt;br /&gt;or you can &lt;code&gt;git am -i downloaded-file.txt&lt;/code&gt; -i is interactive and will allow you to choose whole folders full of mail patches and which to apply.&lt;br /&gt;&lt;br /&gt;I think this is a good workflow for 1 off patches. obviously you don&amp;rsquo;t send them to yourself, I&amp;rsquo;m just trying to show you what it&amp;rsquo;s like to send and receive.&lt;div class=&#34;blogger-post-footer&#34;&gt;&lt;br /&gt;&amp;ndash;&lt;br /&gt;
This &lt;span xmlns:dc=&#34;http://purl.org/dc/elements/1.1/&#34; href=&#34;http://purl.org/dc/dcmitype/Text&#34; rel=&#34;dc:type&#34;&gt;work&lt;/span&gt; by &lt;a xmlns:cc=&#34;http://creativecommons.org/ns#&#34; href=&#34;http://www.xenoterracide.com&#34; property=&#34;cc:attributionName&#34; rel=&#34;cc:attributionURL&#34;&gt;Caleb Cushing&lt;/a&gt; is licensed under a &lt;a rel=&#34;license&#34; href=&#34;http://creativecommons.org/licenses/by-nc-sa/3.0/&#34;&gt;Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License&lt;/a&gt;.&lt;/div&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>