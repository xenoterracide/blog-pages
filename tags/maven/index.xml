<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Maven on Caleb Cushing&#39;s blog</title>
    <link>http://blog.xenoterracide.com/tags/maven/index.xml</link>
    <description>Recent content in Maven on Caleb Cushing&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <atom:link href="http://blog.xenoterracide.com/tags/maven/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Continuous Integration with Wercker and Maven</title>
      <link>http://blog.xenoterracide.com/post/continuous-integration-with-wercker-and-maven/</link>
      <pubDate>Sat, 20 Jun 2015 14:40:00 +0000</pubDate>
      
      <guid>http://blog.xenoterracide.com/post/continuous-integration-with-wercker-and-maven/</guid>
      <description>&lt;p&gt;I&amp;rsquo;m going to walk you through getting mvn test running in wercker, on the new docker based api.&lt;br /&gt;&lt;br /&gt;First let&amp;rsquo;s talk about what &lt;a href=&#34;http://wercker.com/&#34;&gt;Wercker &lt;/a&gt;&amp;nbsp;is and why you&amp;rsquo;d want to use it. Wercker a continuous integration and deployment web application. It will all you to run any language or stack. It currently is free for both private and public repositories; I am hopeful that once it comes out of beta it will maintain reasonable pricing for small personal private projects (Most CI&amp;rsquo;s are ridiculously priced for hobby projects). It can deploy to any platform.&lt;br /&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;So where does it fall apart? well although it seems reasonably well documented I&amp;rsquo;ve only rarely gotten something right on the first try using its documentation. This largely revolves around the fact that its YAML parser seems more sensitive to whitespace than a standard YAML parser, and their examples aren&amp;rsquo;t properly spaced, and the validator doesn&amp;rsquo;t report the right line/position of the error. That being said I&amp;rsquo;m going to tell you how to get up and running fast. Also they seem to have a problem keeping their platform up to date, the 1.0 platform only offers an Ubuntu base that is a few years old already. The 2.0 platform is based on docker, so it takes care of that, but has some problems such as it can&amp;rsquo;t process the Dockerfile itself.&lt;br /&gt;&lt;br /&gt;All this said Wercker accomplishes my need of having a continuous integration environment that is cheap enough to work for both my open source and my private hobby projects, no matter what language I might use.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;To get started you&amp;rsquo;re going to need a Bitbucket or Github account as well as a wercker account, and a git repo. Before creating the &amp;ldquo;application&amp;rdquo; on Wercker let&amp;rsquo;s actually create our application in a git repo. All you need is a git repo from which you can run &lt;code&gt;mvn test&lt;/code&gt; at the root. To make this simple, &lt;a href=&#34;https://github.com/spring-projects/spring-boot/tree/master/spring-boot-samples/spring-boot-sample-simple&#34;&gt;here is a spring boot sample project&lt;/a&gt;, you can clone that, and copy the directory I linked into a new project, and create a new git repo and upload it to your git host. &lt;a href=&#34;https://bitbucket.org/xenoterracide/werker-maven-spring-boot-example/src&#34;&gt;Here&amp;rsquo;s a fully configured sample project I made&lt;/a&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;So what we&amp;rsquo;re going to focus on is the &lt;code&gt;wercker.yml&lt;/code&gt;, create that file at the root of your git repo. the first thing the file will need is a box, the box is the docker image your code runs in, and will deploy. For this we&amp;rsquo;ll choose the &lt;a href=&#34;https://registry.hub.docker.com/_/maven/&#34;&gt;maven docker image&lt;/a&gt;, all you need to do is put &lt;code&gt;box: maven:latest&lt;/code&gt; at the top of the file. After that we need to add build steps. build steps are individual units of work you need to do to build your project. There are ways to write script steps or complicated custom steps, but those are for another article. We&amp;rsquo;re just going to add the &lt;a href=&#34;https://bitbucket.org/xenoterracide/wercker-step-maven&#34;&gt;maven build step I wrote&lt;/a&gt; that works for 1, and 2.0 Though it works better for 1 as it supports caching dependendencies and I haven&amp;rsquo;t figured out if that&amp;rsquo;s possible in 2. Below is the completed wercker.yml, steps has a 2 space indentation, the step name has a 4 space indentation and a -, and goals has an 8 space indentation, as mentioned spacing is very important.&lt;/div&gt;&lt;div&gt;&lt;script src=&#34;https://bitbucket.org/xenoterracide/werker-maven-spring-boot-example/src/e4fddd5494d895173d3181914cbf43beff768e25/wercker.yml?embed=t&#34;&gt;&lt;/script&gt;&lt;/div&gt;&lt;div&gt;That&amp;rsquo;s it, now go log into Wercker, click create -&amp;gt; application and follow the instructions, when you&amp;rsquo;re done you should be able to push commits, and wercker will run mvn test for you. Here&amp;rsquo;s what &lt;a href=&#34;https://app.wercker.com/#applications/54befcb456767b4663000750&#34;&gt;our sample&lt;/a&gt; looks like when you&amp;rsquo;re done. That&amp;rsquo;s it, simple right? have fun wercking with continuous integration on your projects.&lt;/div&gt;&lt;div class=&#34;blogger-post-footer&#34;&gt;&lt;br /&gt;&amp;ndash;&lt;br /&gt;
This &lt;span xmlns:dc=&#34;http://purl.org/dc/elements/1.1/&#34; href=&#34;http://purl.org/dc/dcmitype/Text&#34; rel=&#34;dc:type&#34;&gt;work&lt;/span&gt; by &lt;a xmlns:cc=&#34;http://creativecommons.org/ns#&#34; href=&#34;http://www.xenoterracide.com&#34; property=&#34;cc:attributionName&#34; rel=&#34;cc:attributionURL&#34;&gt;Caleb Cushing&lt;/a&gt; is licensed under a &lt;a rel=&#34;license&#34; href=&#34;http://creativecommons.org/licenses/by-nc-sa/3.0/&#34;&gt;Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License&lt;/a&gt;.&lt;/div&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>